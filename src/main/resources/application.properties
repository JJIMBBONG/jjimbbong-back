spring.application.name=jjimppong-back

#! REST API SERVER PORT
server.port=4000

#! DATA JPA - MySQL Coonnect Option
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/jjimppong?serverTimezone=UTC&characterEncoding=UTF-8
spring.datasource.username=root
spring.datasource.password=qwer


# application.properties
spring.jpa.properties.hibernate.jdbc.time_zone=Asia/Seoul

#! OAuth 클라이언트 주소
oauth.client-main=http://localhost:3000/main
oauth.client-auth=http://localhost:3000/auth

#! Kakao OAuth2 설정
spring.security.oauth2.client.registration.kakao.client-id=9469f42409ddda61d870457adba71b2e
spring.security.oauth2.client.registration.kakao.client-secret=cjyQOjgY9lBk3KsexZ70ao4MaqKVteJK
spring.security.oauth2.client.registration.kakao.redirect-uri={baseUrl}/oauth2/callback/{registrationId}
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.kakao.scope=profile_nickname

#! Kakao OAuth2 프로바이더 설정
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id

#! Naver OAuth2 설정
spring.security.oauth2.client.registration.naver.client-id=k5tX1MEGjzt110HbwmH_
spring.security.oauth2.client.registration.naver.client-secret=FCFHiKNqED
spring.security.oauth2.client.registration.naver.redirect-uri={baseUrl}/oauth2/callback/{registrationId}
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=email

#! Naver OAuth2 프로바이더 설정
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

# Gmail SMTP 서버의 호스트 주소
spring.mail.host=smtp.gmail.com
# 이메일 전송에 적합한 포트번호 설정
spring.mail.port=587
# username: 이메일을 보낼 gmail
spring.mail.username=hjs68550@gmail.com
# password: 생성한 앱 비밀번호
spring.mail.password=mdwrhbpvnxknufjk
# auth: SMTP 서버에 인증 필요한 경우 true
spring.mail.properties.mail.smtp.auth=true
# starttls: SMTP 서버가 TLS를 사용하여 안전한 연결을 요구하는 경우 true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
# connectiontimeout: 클라이언트가 SMTP 서버와의 연결을 설정 대기 시간 (MS 단위 5초)
spring.mail.properties.mail.smtp.connectiontimeout=5000
# timeout: 클라이언트가 SMTP 서버로부터 응답 대기 시간
spring.mail.properties.mail.smtp.timeout=5000
# writetimeout: 클라이언트가 작업을 완료 대기 시간
spring.mail.properties.mail.smtp.writetimeout=5000

#! JWT 비밀키
# 랜덤한 키 생성후 ? 대신 집어넣기
jwt.secret=?4d00a69d-7510-4553-bbb7-745f43d5580e

#! tourAPI 인증키
tourapi.service-key=vvbWIqafswD60L%2Fz5l1eUwiu835Akri6p5UQFwTnGcPwd8J%2FNQzaNgtzPiwatqxbdu%2BQk0por8jYm0UopoVUtA%3D%3D

#! Request에 파일 사이즈 제한 조정
spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=110MB

#! file 작업 경로
file.path=D:/upload/
file.url=http://localhost:4000/file/

spring.jpa.open-in-view=false

